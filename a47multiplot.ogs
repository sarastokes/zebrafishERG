//14JAN2015 DROPBOX VERSION
//for K5-8HrgbPu spectral fits plot amplitudes across spectrum at 3 const hv stimulus levels
//Uses Hughes etal 1998 nomogram for RGB cones
//Uses Palacios 1996 for UV cones
//get the number of macros to average

%N=%H;
page.active$="Spectrum";
//create label for meanspectrum
  col(1)[10]$=[Date]!col(1)[1]$ + col(3)[20]$ + col(1)[1]$; 
  col(1)[12]$=%G;
//set 3 significant digits for dimmest spectrum
  wks.col6.digits=3;
//x values for curves
col(wlcurve)=data(330,650,5);
//y values for curves
//Huges&Bilotta RGB nomograms
//polynomial coefficients
a0=-93.262;
a1=617.458;
a2=-2815.735;
a3=7339.277;
a4=-10714.545;
a5=9048.982;
a6=-4410.667;
a7=1154.235;
a8=-125.738;
//Palacios&Goldsmith U nomogram
//polynomial coefficients
u0=-48139.554;
u1=309007.504;
u2=-770875.542;
u3=834365.023;
u4=-57657.482;
u5=-815689.388;
u6=871189.984;
u7=-389189.665;
u8=66989.122;
//cone wl max's
R2max=600; //red cone A2 peak
R1max=548; //red cone A1 peak
Rmax=548;  //common mixed peak 
Gmax=480;  //common mixed peak
Bmax=415;
Umax=362;

//fit function 5 substitutes a rod 503nm pigment for a green cone 480nm pigment
if(col(3)[10]==5){Gmax=503};
//fit function 6 substitutes a green-cone 520nm pigment for a green cone 480nm pigment
if(col(3)[10]==5){Gmax=520};
//fit function 8 substitutes a green-cone vitamin A2 492nm EK&K pigment for a green cone 480nm pigment
if(col(3)[10]==8){Gmax=492};
//fit function 8 substitutes a red-cone vitamin A2 612nm EK&K pigment for a red cone 570 pigment
if(col(3)[10]==10){Rmax=541};
if(col(3)[10]==11){Rmax=542};
if(col(3)[10]==12){Rmax=543};
if(col(3)[10]==13){Rmax=544};
if(col(3)[10]==14){Rmax=545};
if(col(3)[10]==15){Rmax=546};
if(col(3)[10]==16){Rmax=547};
if(col(3)[10]==17){Rmax=549};
if(col(3)[10]==18){Rmax=550};
if(col(3)[10]==19){Rmax=551};
if(col(3)[10]==20){Rmax=552};
if(col(3)[10]==21){Rmax=553};
if(col(3)[10]==22){Rmax=554};
if(col(3)[10]==23){Rmax=555};
if(col(3)[10]==24){Rmax=557};
if(col(3)[10]==25){Rmax=558};
if(col(3)[10]==26){Rmax=559};
if(col(3)[10]==27){Rmax=560};
if(col(3)[10]==28){Rmax=561};
if(col(3)[10]==29){Rmax=562};
if(col(3)[10]==30){Rmax=563};
if(col(3)[10]==31){Rmax=564};
if(col(3)[10]==32){Rmax=565};
if(col(3)[10]==33){Rmax=566};
if(col(3)[10]==34){Rmax=567};
if(col(3)[10]==35){Rmax=568};
if(col(3)[10]==36){Rmax=569};
if(col(3)[10]==37){Rmax=570};

//absorptions
if(col(3)[10]!=9){
  P=Rmax;
  for(i=1;i<=65;i+=1){
    x=col(wlcurve)[i];
    col(Ar)[i]=a0+a1*(P/x)+a2*(P/x)^2+a3*(P/x)^3+a4*(P/x)^4+a5*(P/x)^5+a6*(P/x)^6+a7*(P/x)^7+a8*(P/x)^8;
    };
  };
if(col(3)[10]==9){
  P=R2max;
  for(i=1;i<=65;i+=1){
    x=col(wlcurve)[i];
    col(Ar2)[i]=a0+a1*(P/x)+a2*(P/x)^2+a3*(P/x)^3+a4*(P/x)^4+a5*(P/x)^5+a6*(P/x)^6+a7*(P/x)^7+a8*(P/x)^8;
    };
  P=R1max;
  for(i=1;i<=65;i+=1){
    x=col(wlcurve)[i];
    col(Ar1)[i]=a0+a1*(P/x)+a2*(P/x)^2+a3*(P/x)^3+a4*(P/x)^4+a5*(P/x)^5+a6*(P/x)^6+a7*(P/x)^7+a8*(P/x)^8;
    };
  };
P=Gmax;
for(i=1;i<=65;i+=1){
  x=col(wlcurve)[i];
  col(Ag)[i]=a0+a1*(P/x)+a2*(P/x)^2+a3*(P/x)^3+a4*(P/x)^4+a5*(P/x)^5+a6*(P/x)^6+a7*(P/x)^7+a8*(P/x)^8;
  };
P=Bmax;
for(i=1;i<=65;i+=1){
  x=col(wlcurve)[i];
  col(Ab)[i]=a0+a1*(P/x)+a2*(P/x)^2+a3*(P/x)^3+a4*(P/x)^4+a5*(P/x)^5+a6*(P/x)^6+a7*(P/x)^7+a8*(P/x)^8;
  };
P=Umax;
for(i=1;i<=65;i+=1){
  x=col(wlcurve)[i];
  col(Au)[i]=u0+u1*(P/x)+u2*(P/x)^2+u3*(P/x)^3+u4*(P/x)^4+u5*(P/x)^5+u6*(P/x)^6+u7*(P/x)^7+u8*(P/x)^8;
  };

//fraction of quanta absorbed for each pigment
if(col(3)[10]!=9){
  col(Ar)=10^col(Ar);
  };
if(col(3)[10]==9){
  col(Ar2)=10^col(Ar2);
  col(Ar1)=10^col(Ar1);
  };
col(Ag)=10^col(Ag);
col(Ab)=10^col(Ab);
col(Au)=10^col(Au);

//Hill alpha=1 coefficients
sr=col(mean)[1];sr=10^sr;
sg=col(mean)[2];sg=10^sg;
sb=col(mean)[3];sb=10^sb;
if(col(3)[10]!=9){
  su=col(mean)[4];su=10^su;
  };
if(col(3)[10]==9){
  sr2=col(mean)[1];sr2=10^sr2;
  sr1=col(mean)[1];sr1=10^sr1;
  su=col(mean)[1];su=10^su;  
  };
if(col(3)[10]!=9){
  Vr=col(mean)[5];
  };
if(col(3)[10]==9){
  Vr2=col(mean)[4];
  Vr1=col(mean)[5];
  };
Vg=col(mean)[6];
Vb=col(mean)[7];
Vu=col(mean)[8];

//Select amplitude units
if(col(SD)[28]==1){
  %B=mV µVperhv;
  AmpUnit=1;
  };
if(col(SD)[28]==2){
  %B=µV nVperhv;
  AmpUnit=2;
  };
if(col(SD)[28]==3){
  AmpUnit=1;
  %B=Events/sec Events/sec/hv; 
  }; 
if(col(SD)[29]){AmpUnit=col(SD)[29]};
getn (Units) AmpUnit:B (Select Amplitude Units);
col(SD)[29]=AmpUnit;
//put units on spectral columns
del -v U;
del -v L;
col(wlcurve)[U]$="nm";
SpectraColLOng$="const hv spectra @ log(hv)=$(col(mean)[16], .2), $(col(mean)[17], .2), $(col(mean)[18], .2)";
for(i=6;i<=8;i+=1){
  col($(i))[L]$=SpectraColLOng$;
  col($(i))[U]$=%[%B, #$(ampunit)];
  };


//k25 spectral fit
k25=col(mean)[16];I25=10^k25;
if(col(3)[10]!=9){
  col(uVperk25)=Vr*I25/(I25+sr/col(Ar))+Vg*I25/(I25+sg/col(Ag))+Vb*I25/(I25+sb/col(Ab))+Vu*I25/(I25+su/col(Au));
  };
if(col(3)[10]==9){
  col(uVperk25)=Vr2*I25/(I25+sr2/col(Ar2))+Vr1*I25/(I25+sr1/col(Ar1))+Vg*I25/(I25+sg/col(Ag))+Vb*I25/(I25+sb/col(Ab))+Vu*I25/(I25+su/col(Au));
  };
if(AmpUnit==2){col(uVperk25)=(1000*col(uVperk25))/I25};
 
//k50 spectral fit
k50=col(mean)[17];I50=10^k50;
if(col(3)[10]!=9){
  col(uVperk50)=Vr*I50/(I50+sr/col(Ar))+Vg*I50/(I50+sg/col(Ag))+Vb*I50/(I50+sb/col(Ab))+Vu*I50/(I50+su/col(Au));
  };
if(col(3)[10]==9){
  col(uVperk50)=Vr2*I50/(I50+sr2/col(Ar2))+Vr1*I50/(I50+sr1/col(Ar1))+Vg*I50/(I50+sg/col(Ag))+Vb*I50/(I50+sb/col(Ab))+Vu*I50/(I50+su/col(Au));
  };
if(AmpUnit==2){col(uVperk50)=(1000*col(uVperk50))/I50};

//k75 spectral fit
k75=col(mean)[18];I75=10^k75;
if(col(3)[10]!=9){
  col(uVperk75)=Vr*I75/(I75+sr/col(Ar))+Vg*I75/(I75+sg/col(Ag))+Vb*I75/(I75+sb/col(Ab))+Vu*I75/(I75+su/col(Au));
  };
if(col(3)[10]==9){
  col(uVperk75)=Vr2*I75/(I75+sr2/col(Ar2))+Vr1*I75/(I75+sr1/col(Ar1))+Vg*I75/(I75+sg/col(Ag))+Vb*I75/(I75+sb/col(Ab))+Vu*I75/(I75+su/col(Au));
  };
if(AmpUnit==2){col(uVperk75)=(1000*col(uVperk75))/I75};

//x values of measured points
//clear col(wl)
page.active$="Spectrum";
for(i=1;i<=9;i+=1){
  col(wl)[i]$=""
  };
//find test wavelengths
k=1;
for(i=330;i<=650;i+=40){
  page.active$="Import";
  get col(wl) -e last;
  for(j=1;j<=last;j+=1){
    if(col(wl)[j]==i){
      page.active$="Spectrum";
      col(wl)[k]=i;
      k+=1;
      break;
      }}};

//col(wl)=data(330,650,40);
//mean y values at these 9 wl maximal all computed using fit sensitivities
page.active$="Spectrum";
get col(wl) -e last;
for(i=1;i<=last;i+=1){
  for(j=1;j<=66;j+=1){
   if(col(wl)[i]==col(wlcurve)[j]){
     col(k25pts)[i]=col(uVperk25)[j];
     col(k50pts)[i]=col(uVperk50)[j];
     col(k75pts)[i]=col(uVperk75)[j];  
     }}};

//wl peaks and troughs for plot labels
get col(wlpeak) -e last;
//clear column if there is old data
if(last>0){
  for(i=1;i<=last;i+=1){
    col(wlpeak)[i]$="";
    col(AmpPk)[i]$="";
    }};

pk=0;
found=0;
for(k=25;k<=75;k+=25){
  %B=uVperk$(k);
     for(i=2;i<=64;i+=1){
       if(col(%B)[i-1]<col(%B)[i] && col(%B)[i+1]<col(%B)[i]){
         pk=pk+1;
         found=1};
       if(col(%B)[i-1]>col(%B)[i] && col(%B)[i+1]>col(%B)[i]){
         pk=pk+1;
         found=1};
       if(found==1){
         wl1=col(wlcurve)[i-1];mV1=col(%B)[i-1];
         wl2=col(wlcurve)[i];mV2=col(%B)[i];
         wl3=col(wlcurve)[i+1];mV3=col(%B)[i+1];
         denom=(wl1-wl2)*(wl1-wl3)*(wl2-wl3);
         Amx=(wl3*(mV2-mV1)+wl2*(mV1-mV3)+wl1*(mV3-mV2))/denom;
         Bmx=(wl3*wl3*(mV1-mV2)+wl2*wl2*(mV3-mV1)+wl1*wl1*(mV2-mV3))/denom;
         xv=-Bmx/(2*Amx);
         wlmax=xv;
         col(wlpeak)[pk]=wlmax;
         col(crvtype)[pk]=k;
         if(col(3)[10]!=9){
           Arpk=col(Ar)[i]-(col(Ar)[i]-col(Ar)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Agpk=col(Ag)[i]-(col(Ag)[i]-col(Ag)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Abpk=col(Ab)[i]-(col(Ab)[i]-col(Ab)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Aupk=col(Au)[i]-(col(Au)[i]-col(Au)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           col(AmpPk)[pk]=Vr*I$(k)/(I$(k)+sr/Arpk)+Vg*I$(k)/(I$(k)+sg/Agpk)+Vb*I$(k)/(I$(k)+sb/Abpk)+Vu*I$(k)/(I$(k)+su/Aupk);
           };
         if(col(3)[10]==9){
           Ar2pk=col(Ar2)[i]-(col(Ar2)[i]-col(Ar2)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Ar1pk=col(Ar1)[i]-(col(Ar1)[i]-col(Ar1)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Agpk=col(Ag)[i]-(col(Ag)[i]-col(Ag)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Abpk=col(Ab)[i]-(col(Ab)[i]-col(Ab)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           Aupk=col(Au)[i]-(col(Au)[i]-col(Au)[i-1])*((col(wlcurve)[i]-col(wlpeak)[pk])/5);
           col(AmpPk)[pk]=Vr2*I$(k)/(I$(k)+sr2/Ar2pk)+Vr1*I$(k)/(I$(k)+sr1/Ar1pk)+Vg*I$(k)/(I$(k)+sg/Agpk)+Vb*I$(k)/(I$(k)+sb/Abpk)+Vu*I$(k)/(I$(k)+su/Aupk);
           }; 
         if(AmpUnit==2){col(AmpPk)[pk]=(1000*col(AmpPk)[pk])/I$(k)};
         found=0;
}}};

//get wl min and max for 3 worksheet spectra
get col(AmpPk) -e last;
i25max=0;
i25min=0;
i50max=0;
i50min=0;
i75max=0;
i75min=0;
max25=0;
min25=0;
max50=0;
min50=0;
max75=0;
min75=0;
for(i=1;i<=last;i+=1){
//initialize max and min  
  if(max25==0 && col(crvtype)[i]==25){max25=col(AmpPk)[i];i25max=i};
  if(min25==0 && col(crvtype)[i]==25){min25=col(AmpPk)[i];i25min=i};
  if(max50==0 && col(crvtype)[i]==50){max50=col(AmpPk)[i];i50max=i};
  if(min50==0 && col(crvtype)[i]==50){min50=col(AmpPk)[i];i50min=i};
  if(max75==0 && col(crvtype)[i]==75){max75=col(AmpPk)[i];i75max=i};
  if(min75==0 && col(crvtype)[i]==75){min75=col(AmpPk)[i];i75min=i};
//find max and min
  //k25 curve
  if(col(AmpPk)[i]>max25 && col(crvtype)[i]==25){max25=col(AmpPk)[i];i25max=i};
  if(col(AmpPk)[i]<min25 && col(crvtype)[i]==25){min25=col(AmpPk)[i];i25min=i};
  //k50 curve
  if(col(AmpPk)[i]>max50 && col(crvtype)[i]==50){max50=col(AmpPk)[i];i50max=i};
  if(col(AmpPk)[i]<min50 && col(crvtype)[i]==50){min50=col(AmpPk)[i];i50min=i};
   //k75 curve
  if(col(AmpPk)[i]>max75 && col(crvtype)[i]==75){max75=col(AmpPk)[i];i75max=i};
  if(col(AmpPk)[i]<min75 && col(crvtype)[i]==75){min75=col(AmpPk)[i];i75min=i};
  };
//k25 max & min wls  
%(%H,3,31)=col(wlpeak)[i25min];
%(%H,3,32)=col(wlpeak)[i25max];
//k50 max & min wls
%(%H,3,41)=col(wlpeak)[i50min];
%(%H,3,42)=col(wlpeak)[i50max];
//k75max & min wls
%(%H,3,51)=col(wlpeak)[i75min];
%(%H,3,52)=col(wlpeak)[i75max];


//get wl nul points for k25 curve
ii=33;
for (i=64;i>=1;i-=1){
  mV1=col(uvperk25)[i];
  mV2=col(uVperk25)[i+1];
  if(mV2>0 && mV1<0){nul=col(wlcurve)[i]+5*abs(mV1/(mV2-mV1));%(%H,3,ii)=$(nul,.0);ii+=1};
  if(mV2<0 && mV1>0){nul=col(wlcurve)[i]+5*abs(mV1/(mV2-mV1));%(%H,3,ii)=$(nul,.0);ii+=1};
};

//get wl nul points for k50 curve
ii=43;
for (i=64;i>=1;i-=1){
  mV1=col(uvperk50)[i];
  mV2=col(uVperk50)[i+1];
  if(mV2>0 && mV1<0){nul=col(wlcurve)[i]+5*abs(mV1/(mV2-mV1));%(%H,3,ii)=$(nul,.0);ii+=1};
  if(mV2<0 && mV1>0){nul=col(wlcurve)[i]+5*abs(mV1/(mV2-mV1));%(%H,3,ii)=$(nul,.0);ii+=1};
};
//get wl nul points for k75 curve
ii=53;
for (i=64;i>=1;i-=1){
  mV1=col(uvperk75)[i];
  mV2=col(uVperk75)[i+1];
  if(mV2>0 && mV1<0){nul=col(wlcurve)[i]+5*abs(mV1/(mV2-mV1));%(%H,3,ii)=$(nul,.0);ii+=1};
  if(mV2<0 && mV1>0){nul=col(wlcurve)[i]+5*abs(mV1/(mV2-mV1));%(%H,3,ii)=$(nul,.0);ii+=1};
};



//plot spectral curve and points
getyesno "plot spectral curves" yes;
if (yes){
//match plot color to background color
  bkgdcolr=1;
  bkgcolr$=%(%N,3,27);
  if(bkgcolr$=="red"){bkgdcolr=2};
  if(bkgcolr$=="627nm"){bkgdcolr=2};
  if(bkgcolr$=="485nm"){bkgdcolr=12};
  if(bkgcolr$=="blue"){bkgdcolr=4};
  if(bkgcolr$=="418nm"){bkgdcolr=4};
  if(bkgcolr$=="white"){bkgdcolr=8};
  if(bkgcolr$=="yellow"){bkgdcolr=15};
  if(bkgcolr$=="purple"){bkgdcolr=16};
  if(bkgcolr$=="627and418nm"){bkgdcolr=16};
  if(bkgcolr$=="dark"){bkgdcolr=24};
  if(bkgcolr$=="IR"){bkgdcolr=11};

 %Q=AmplitudeSpectra;

 if(exist(%Nspectra)==0){win -t plot "%Q" "%Nspectra"};
  win -a %Nspectra;

//curves and points

  layer -i %N_uVperK25;
  set %N_uVperK25 -l 1; //line connect=segment
  set %N_uVperK25 -c bkgdcolr;
  set %N_uVperK25 -d 0; //solid line
  set %N_uVperK25 -k 0; //no symbol

  layer -i %N_uVperK50;  
  set %N_uVperK50 -c bkgdcolr;
  set %N_uVperK50 -d 1; //dashed line
  set %N_uVperK50 -l 1; //line connect=segment
  set %N_uVperK50 -k 0; //no symbol

  layer -i %N_uVperK75;
  set %N_uVperK75 -c bkgdcolr;
  set %N_uVperK75 -d 3; //dash dot line
  set %N_uVperK75 -l 1; //line connect=segment
  set %N_uVperK75 -k 0; //no symbol

  layer -i %N_k25pts; 
  set %N_k25pts -c bkgdcolr;
  set %N_k25pts -k 4; //down triangle
  set %N_k25pts -z 9; //9pts
  set %N_k25pts -l 0; //scatter
  set %N_k25pts -kf 1; //open symbol

  layer -i %N_k50pts;
  set %N_k50pts -c bkgdcolr;
  set %N_k50pts -k 2; //circle
  set %N_k50pts -z 9; //9pts 
  set %N_k50pts -l 0; //scatter
  set %N_k50pts -kf 1; //open symbol

  layer -i %N_k75pts;
  set %N_k75pts -c bkgdcolr;
  set %N_k75pts -k 3; //up triangle
  set %N_k75pts -z 9; //9pts
  set %N_k75pts -l 0; //scatter
  set %N_k75pts -kf 1; //open symbol

//+signs for peaks and troughs
//  layer -w %N 18 0 18 0 201;
  layer -i %N_AmpPk;
//  set %N_AmpPk -l 0;
  set %N_AmpPk -k 6;  //+symbol
  set %N_AmpPk -kf 0; //open
  set %N_AmpPk -z 18; //18pt
  set %N_AmpPk -c 20; //gray
  set %N_AmpPk -l 0;  //scatter
  rescale;

};

//write Header and color coding
//if(yes){getyesno "write header and color code" ok};
//if (yes && ok){
if (yes){
//different header for ERG or Cell
//Cell
  if(%(%N,4,28)==1){
    Header.text$=%(date,1,1) %(%N,3,20) %(%N,3,25) %(%N,3,22) %(%N,3,21) %(%N,3,13)
Book:%N fitfunc %(%N,4,10) 
 %(%N,1,29) msec; 
    };
//ERG
  if(%(%N,4,28)==2){
    header.text$=%(date,1,1) %(%N,3,20) %(%N,3,25) %(%N,4,25) %(%N,3,21) %(%N,3,13) background %(%N,3,27) %(%N,3,19)
Book:%N %(%N,1,1) fitfunc %(%N,4,10) Extra ND %(%N,3,30)
 %(%N,1,29) msec; 
    };
//Spikes%
  if(%(%N,4,28)==3){
    header.text$=%(date,1,1) %(%N,3,20) %(%N,3,25) %(%N,4,25) %(%N,3,21) %(%N,3,13) background %(%N,3,27) %(%N,3,19)
Book:%N %(%N,1,1) fitfunc %(%N,4,10) Extra ND %(%N,3,30)
 %(%N,1,29) msec; 
    };

//  label -s -sa -j 1 -n header; 
//  label -s -sa -j 1 -n header %Z;
//xy coordinates of header
  header.x=490;
  header.y=layer.y.to + legend.dy/3;
};

//set up parameter list for different models
if (yes){
  range PR=[%N]"Spectrum"!col(param);
  range MN=[%N]"Spectrum"!col(mean);
  range EE=[%N]"Spectrum"!col(SD);

  if(MN[10]!=9){
    Vmax$="
%(PR[5]$)   $(MN[5],.2)	+/- $(EE[5],.2)
%(PR[6]$)   $(MN[6],.2)	+/- $(EE[6],.2)
%(PR[7]$)   $(MN[7],.2)	+/- $(EE[7],.2)
%(PR[8]$)   $(MN[8],.2)	+/- $(EE[8],.2)
Stim $(MN[9],.0)
r²   $(MN[12],.3)";
    };
  if(MN[10]==9){
    Vmax$="
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)
%(PR[5]$)   $(MN[5],.2)	+/- $(EE[5],.2)
%(PR[6]$)   $(MN[6],.2)	+/- $(EE[6],.2)
%(PR[7]$)   $(MN[7],.2)	+/- $(EE[7],.2)
%(PR[8]$)   $(MN[8],.2)	+/- $(EE[8],.2)
Stim $(MN[9],.0)
r²   $(MN[12],.3)";
    };

//k5 fit
  if(MN[10]==1){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)";
    };

//k6 UV
  if(MN[10]==2){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)";
    };

//k8 fit
  if(MN[10]==3){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k5 UV more sensitive fit
  if(MN[10]==4){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)";
    };

//k8 rod for green cone
  if(MN[10]==5){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k8 with 520nm for green cone
  if(MN[10]==6){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k8 A2 pigment with 492nm for green cone and 612nm for red cone
  if(MN[10]==8){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k6 fit with both A2 and A1 red cone pigments
  if(MN[10]==9){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)";
    };

//k8 fit with 556nm red cone pigment
  if(MN[10]==10){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k8 fit with 548nm red cone pigment
  if(MN[10]==11){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k8 fit with 548nm red cone pigment and 470nm green cone pigment
  if(MN[10]==12){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)
%(PR[2]$)   $(MN[2],.2)	+/- $(EE[2],.2)
%(PR[3]$)   $(MN[3],.2)	+/- $(EE[3],.2)
%(PR[4]$)   $(MN[4],.2)	+/- $(EE[4],.2)"
    };

//k5 fit with 548nm red cone pigment
  if(MN[10]==13){
    logsk$="%(PR[1]$)   $(MN[1],.2)	+/- $(EE[1],.2)";
    };

  fitparam2.text$=logsk$+Vmax$;
  fitparam2.x=652;
  fitparam2.y=layer.y.to-fitparam2.dy/2;
};

//Write legend
if (yes){
  range MN=[%N]Spectrum!mean;
  legendtxt$="\l(4) log(h\g(n))=$(MN[16],.2)
\l(5) log(h\g(n))=$(MN[17],.2)
\l(6) log(h\g(n))=$(MN[18],.2)
\l(7) wl max & min";
  legend.text$=legendtxt$;
  };

//adjust labels for y axis
if(yes){
  range MN=[%N]Spectrum!mean;
  range EE=[%N]Spectrum!SD;
  if(AmpUnit==1){
    if(EE[28]==1){
      YL.text$=MN[29]$+"Amplitude (mV)";
      };
    if(EE[28]==2){
      YL.text$=MN[29]$+"Amplitude (\g(m)V)";
      };
    if(EE[28]==3){
      %B=MN[29]$;
      YL.text$=MN[29]$;
      };
    };

  if(AmpUnit==2){
    if(EE[28]==1){
      YL.text$=MN[29]$+" sensitivity (\g(m)V·hv\+(-1)·\g(m)m\g(\+(2))· sec\+(1))";
      };
    if(EE[28]==2){
      YL.text$=MN[29]$+" sensitivity (nV·hv\+(-1)·\g(m)m\g(\+(2))· sec\+(1))";
      };
    if(EE[28]==3){
      YL.text$=MN[29]$+" sensitivity (Events·hv\+(-1)·\g(m)m\g(\+(2))";
      };
   };
};


//if(yes){getyesno "write peak and trough wavelengths" ok};
if (yes){
  range MN=[%N]"Spectrum"!col(mean);
  %B="";
  MN[23]$="%H";
//write wl's on peaks and troughs
  j=0;
  for(i=1;i<=30;i+=1){
    if(%N_wlpeak[i]>0){j+=1}; 
    };
  for(i=1;i<=j;i+=1){
    wlx=%N_wlpeak[i];
    wly=%N_AmpPk[i];
    %B=$(wlx,%3.0f);
    label -a wlx wly -s -n wl$(i) %B;
    %B="";
    };
};

%B="";
%Z="";


getyesno "Compute Irradiance Response Curves" yes;
if(yes){
    window -a %N;
    page.active$="IR";
    run.file(IRfitSpikes.txt)};